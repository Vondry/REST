FORMAT: 1A
HOST: http://http://localhost:5000

# REST API for Cinemas IS

> College project which aims to create Information System for Cinemas chain

**Project**: https://gitlab.com/Aisik/iis_best_team

**API specs**: https://github.com/Vondry/REST

## Data Structures

### City (object)
- id: 1 (number, required)
- name: City name (string, required)

### Cinema (object)
- id: 1 (number, required)
- name: Cinema name (string, required)
- street: Cinema street (string, required)
- postcode: 123456 (number, required)
- latitude: 40.71 (number, required)
- longtitude: 74.00 (number, required)

### Movie (object)
- id: 1 (number, required)
- name: Movie name (string, required)
- times: 1541190611, 1541190611 (array[number], required) - Timestamp in seconds, when movies are beigin projected
- images: cover_image.png, ./another/img.jpg (array[string], required) - Images related to the movie. First image is the cover.
- language: cz (string, required)
- subtitles: en (string, nullable)
- access: 12+ (string, nullable)
- genre: Movie genre (string, required)
- length: 155  (number, required) - Move length in minutes

### Hall (object)
- id: 1 (number, required)
- seats (array[(array[number])]) - every array in seats display seats row
    - 1, 1, 1, 1, 0, 0  (array[number]) - Meaning of values: -1-no seat, 0-unavailable, 1-available
    - 1, 1, 1, 1, 0, 0  (array[number])


# Group Reservation

Data related to reservation system

## Cities Collection [/cities]

### List all cities [GET]

+ Response 200 (application/json)
    
    + Attributes (array[City])
    
## Cinemas Collection [/cinemas]

### List all cinemas [GET]

+ Response 200 (application/json)
    
    + Attributes (array[Cinema])
    
## Cinemas in Cities [/cities/cinemas]

### List all cinemas associated to cities [GET]

+ Response 200 (application/json)

    + Attributes (array)
        - (object)
            - Include City
            - cinemas (array[number])

## List Movies associated to cinema [/cinemas/{id}/movies]

### Movies in cinemas  [GET]

+ Parameter
    - id (number) - Cinema id

+ Response 200 (application/json)
 
    + Attributes (array[Movie])

## Check reservation status [/reservation/status]

### Reservation status  [GET]

+ Request (application/json)
    + Attributes (object)
        - cinemaId (number)
        - movieId (number)
        - movieTime (number)
        - hallId (number)
        - reservations (array)
            - (object)
                - tarrifId
                - count
        - price (number)
        - seats (array)
            - (object)
                - row (number)
                - column (number)

+ Response 200 (application/json)
     + Attributes (object)
        - status: success (string)
        - errors (array[string])
        
+ Response 400 (application/json)
     + Attributes (object)
        - status: failure (string)
        - errors: Error1, Error2 (array[string])


# Group Movies

Data related to movies

## List All Movies [/movies]

### List all Movies  [GET]

+ Response 200 (application/json)
 
    + Attributes (array[Movie])
        
## Movie [/movies/{id}]

### Movie  [GET]

+ Parameter
    - id (number) - Movie id

+ Response 200 (application/json)
 
    + Attributes 
        - Include Movie
        

# Group Hall

Data related to halls

## Halls collection [/halls]

### List all halls [GET]

+ Response 200 (application/json)
    
    + Attributes (array[Hall])

## Hall related to movie [/halls?cinema={cinemaId}&movie={movieId}&time={time}]

### Movie hall [GET]

+ Parameter
    - cinemaId (number) - Cinema id
    - movieId (number) - Movie id
    - time (number) - Time when movie is played in given Cinema

+ Response 200 (application/json)
 
    + Attributes 
        - Include Hall